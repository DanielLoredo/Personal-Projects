package inventariobite;
import static inventariobite.AccederUsuario.setAcceder;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;


public class Eliminar extends javax.swing.JFrame {

    private ArrayList<Libro> ListaLibros;
    
    public Eliminar() {
        initComponents();
        setLocationRelativeTo(null);
        MostrarTabla();
    } 
    
    
    
    public void MostrarTabla(){
        try{
         
        ListaLibros = new ArrayList<Libro>();
       
        File Archivo_txt = new File("Libros.txt");
        FileReader Fr;
        BufferedReader Br;
        Libro libro, aux = new Libro(0,null,null,null,null,null);
        
            Fr = new FileReader(Archivo_txt);
            Br = new BufferedReader(Fr);
            libro = aux.obtenerLibro(Br);
            
            while(libro != null){
                ListaLibros.add(libro);
                libro = aux.obtenerLibro(Br);
            }
        Br.close();
        Fr.close();
            
        
        String Mat[][] = new String[ListaLibros.size()][6];
        Libro x;
        for(int i = 0; i < ListaLibros.size(); i++){
            x = ListaLibros.get(i);
            Mat[i][0] = Integer.toString(x.getId());
            Mat[i][1] = x.getTitulo();
            Mat[i][2] = x.getAutor();
            Mat[i][3] = x.getUbicacion();
            Mat[i][4] = x.getLector();
            Mat[i][5] = x.getTipo();
        }
        
        JTable_Libros.setModel(new javax.swing.table.DefaultTableModel(
                Mat,
            new String [] {
                "ID", "Título", "Autor", "Ubicación", "Lector", "Tipo"
            }
                
        ));
        
        DefaultTableCellRenderer titular = new DefaultTableCellRenderer();
        titular.setBackground(new Color(239, 198, 46));
        for (int i = 0; i < JTable_Libros.getModel().getColumnCount(); i++) {
        JTable_Libros.getColumnModel().getColumn(i).setHeaderRenderer(titular);

        }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Aun no se han añadido libros");
        }
    }
        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_Libros = new javax.swing.JTable();
        Eliminar_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Regresar2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 40, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/casita1.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, 50, 30));

        JTable_Libros.setBackground(new java.awt.Color(255, 255, 204));
        JTable_Libros.setFont(new java.awt.Font("Californian FB", 0, 16)); // NOI18N
        JTable_Libros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Título", "Autor", "Ubicación", "Lector", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTable_Libros.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(JTable_Libros);
        if (JTable_Libros.getColumnModel().getColumnCount() > 0) {
            JTable_Libros.getColumnModel().getColumn(0).setResizable(false);
            JTable_Libros.getColumnModel().getColumn(1).setResizable(false);
            JTable_Libros.getColumnModel().getColumn(2).setResizable(false);
            JTable_Libros.getColumnModel().getColumn(3).setResizable(false);
            JTable_Libros.getColumnModel().getColumn(4).setResizable(false);
            JTable_Libros.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 1030, 430));

        Eliminar_btn.setBackground(new java.awt.Color(255, 204, 0));
        Eliminar_btn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        Eliminar_btn.setText("Eliminar");
        Eliminar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar_btnActionPerformed(evt);
            }
        });
        getContentPane().add(Eliminar_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 520, 130, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoBiteChiquito.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo 2.3.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1086, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Menú abrir = new Menú();
        abrir.setVisible(true);        
        dispose(); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setAcceder(false);
        BibliotecaDigital abrir = new BibliotecaDigital();
        abrir.setVisible(true); 
        dispose(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Eliminar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar_btnActionPerformed
         
        try{
            
        int NúmeroDeFila;
        String TítuloDelLibroSeleccionado = JTable_Libros.getValueAt(JTable_Libros.getSelectedRow(), 1).toString();
        int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que quiere eliminar el libro: " + TítuloDelLibroSeleccionado + " ", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(opcion == JOptionPane.YES_OPTION){
            
        NúmeroDeFila = JTable_Libros.getSelectedRow();
        ListaLibros.remove(NúmeroDeFila);
        String Mat[][] = new String[ListaLibros.size()][6];
       
        
        File file = new File("Libros.txt");
        PrintWriter Pw;
            if(!file.exists()){
                file.createNewFile();
        }

        Libro libro;
        Pw = new PrintWriter(file, "utf-8");
            for(int i = 0; i < ListaLibros.size(); i++){
                libro = ListaLibros.get(i);
                libro.guardarLibro(Pw);
            }
            Pw.close();  
            MostrarTabla();
            
        }
    }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Primero debe seleccionar el libro que desea eliminar");
    }
        
    }//GEN-LAST:event_Eliminar_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eliminar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar_btn;
    private javax.swing.JTable JTable_Libros;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
